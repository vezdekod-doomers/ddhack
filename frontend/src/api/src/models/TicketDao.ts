/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TicketDao
 */
export interface TicketDao {
    /**
     * 
     * @type {number}
     * @memberof TicketDao
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TicketDao
     */
    fio?: string;
    /**
     * 
     * @type {string}
     * @memberof TicketDao
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof TicketDao
     */
    message?: string;
    /**
     * 
     * @type {Date}
     * @memberof TicketDao
     */
    createDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof TicketDao
     */
    status?: TicketDaoStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof TicketDao
     */
    closeDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof TicketDao
     */
    comment?: string;
}

/**
* @export
* @enum {string}
*/
export enum TicketDaoStatusEnum {
    Open = 'OPEN',
    Closed = 'CLOSED'
}

export function TicketDaoFromJSON(json: any): TicketDao {
    return TicketDaoFromJSONTyped(json, false);
}

export function TicketDaoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TicketDao {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'fio': !exists(json, 'fio') ? undefined : json['fio'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'createDate': !exists(json, 'createDate') ? undefined : (new Date(json['createDate'])),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'closeDate': !exists(json, 'closeDate') ? undefined : (new Date(json['closeDate'])),
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
    };
}

export function TicketDaoToJSON(value?: TicketDao | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'fio': value.fio,
        'phone': value.phone,
        'message': value.message,
        'createDate': value.createDate === undefined ? undefined : (value.createDate.toISOString()),
        'status': value.status,
        'closeDate': value.closeDate === undefined ? undefined : (value.closeDate.toISOString()),
        'comment': value.comment,
    };
}


